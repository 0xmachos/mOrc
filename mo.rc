#!/bin/sh
# mo.rc



# ~~~ User Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# The user functions are designed to be called by the o.rc users.
#

getusers () {
  # List login names of users currently logged into the system
  # TODO: Can we parse /var/run/utmpx to extract users TTYs?
  echo "Currently logged in users:"
  users
}

getallusers () {
  # List all local user accounts
  # Doesn't include system accounts
  echo "User                    UID"
  echo "---------------------------"
  dscl . list /Users UniqueID | grep -v '_'
}

getspec () {
  # Get some basic system info 
  # TODO: Free RAM
  echo "CPU Model: $(sysctl -n machdep.cpu.brand_string)"
  echo "Number of Cores: $(sysctl -n machdep.cpu.core_count)"
  echo "Disk Usage:"
  df -aPH
}

getfv () {
  # Check if FileVault is enabled
  # https://github.com/0xmachos/mOrc/issues/3
  fdesetup status
}

getip () {
  # Get the external IP Address
  # Use Akamai and Google because they're gonna look less dodgy in SOC's lolgs
  echo "HTTP says: $(curl --silent --insecure -- 'https://whatismyip.akamai.com')"
  echo "DNS says:  $(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d \")"
}

getjail () {
  # Check if we're in a VM, running on a Hypervisor or in a chroot
  # TODO: Hypervisor, generic VM, VirtualBox

  jail=0
  echo "Checking to see if we're in one giant simulation..."

  if kextstat | grep -q 'com.vmware.kext.VMwareGfx' || kextstat | grep -q 'com.vmware.kext.vmhgfs'; then
    # Check for loaded VMWare Kexts 
    # This check will only work if VMWare Tools is installed
    jail="VMWare"
  fi 

  if system_profiler SPHardwareDataType | grep -q 'VMware' || system_profiler SPHardwareDataType | grep -q 'Virtual Machine' ; then
    # From SPHardwareDataType we can query Model Identifier or Apple ROM Info
    # Example values for these fields:
    # Model Identifier: VMware 7,1
    # Apple ROM Info: [MS_VM_CERT/SHA1/...]Welcome to the Virtual Machine
    jail="VMware"
  fi

  if ioreg | grep "VMware"; then
    # Detects the virtual USB hubs, SATA controllers, etc 
    # Works without VMware tools installed
    jail="VMware"
  fi

  # shellcheck disable=SC2010
  # We dont need a glob, we dont care about non-alphanumeric filenames
  if ls -di / | grep '2'; then
    # Check if we're in a chroot
    # TODO: Should work but needs tested
    jail="chroot"
  fi


  if [ "${jail}" = "VMware" ]; then
    echo "VMWare Virtual Machine"
  elif [ "${jail}" = "chroot" ]; then
    echo "We're in a chroot"
  else
    echo "Bare Metal!"
  fi
}

gethelp() {
echo "A probably non-comprehensive list of functionality in mOrc"
echo "[*] getusers     -  get currently logged in users"
echo "[*] getallusers  -  list all local user accounts"
echo "[*] getspec      -  get some hardware information"
echo "[*] getfv        -  check if FileVault is enabled"
echo "[*] getip        -  get external IP from Akamai and Google (HTTP and DNS)"
echo "[*] getjail      -  check if we're in a chroot/VM"
}


# ~~~ Main ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

unset HISTFILE
HISTSIZE=0
umask 002

echo "coredumps disabled by ulimit"
# shellcheck disable=SC2039
# ulimit -c works on macOS
ulimit -c 0

echo "=========== Info ==========="
echo "Short host info:"
echo "  Arch:   $(uname -m)"
echo "  Kernel: $(uname -r)"
echo "  OS:     $(sw_vers -productVersion)" 

echo "IP address(s) on the network: "
ifconfig | grep inet | grep -v inet6 | awk -F " " '{ print $2 }' | grep -v 127 

echo "We are uid $(id -u) - $(whoami | tr -d '\n')"

# echo "Machine has been "
# uptime 

echo "Hardware UUID: $(ioreg -d2 -c IOPlatformExpertDevice | awk -F\" '/IOPlatformUUID/{print $(NF-1)}')"
# https://apple.stackexchange.com/a/342043

echo "============================"
echo "=== Welcome to mOrc Shell ==="
echo "Run gethelp to see a list of commands."
echo "$HOME should be deleted upon exit."

PS1="\\[\\033]0;\\007\\]\\u on \\h in \\w \\n\\$ ";

